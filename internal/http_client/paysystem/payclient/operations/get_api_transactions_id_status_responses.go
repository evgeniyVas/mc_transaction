// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mc_transaction/internal/http_client/paysystem/models"
)

// GetAPITransactionsIDStatusReader is a Reader for the GetAPITransactionsIDStatus structure.
type GetAPITransactionsIDStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPITransactionsIDStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPITransactionsIDStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAPITransactionsIDStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAPITransactionsIDStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/transactions/{id}/status] GetAPITransactionsIDStatus", response, response.Code())
	}
}

// NewGetAPITransactionsIDStatusOK creates a GetAPITransactionsIDStatusOK with default headers values
func NewGetAPITransactionsIDStatusOK() *GetAPITransactionsIDStatusOK {
	return &GetAPITransactionsIDStatusOK{}
}

/*
GetAPITransactionsIDStatusOK describes a response with status code 200, with default header values.

ОК
*/
type GetAPITransactionsIDStatusOK struct {
	Payload *models.TransactionStatus
}

// IsSuccess returns true when this get Api transactions Id status o k response has a 2xx status code
func (o *GetAPITransactionsIDStatusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Api transactions Id status o k response has a 3xx status code
func (o *GetAPITransactionsIDStatusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api transactions Id status o k response has a 4xx status code
func (o *GetAPITransactionsIDStatusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api transactions Id status o k response has a 5xx status code
func (o *GetAPITransactionsIDStatusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api transactions Id status o k response a status code equal to that given
func (o *GetAPITransactionsIDStatusOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get Api transactions Id status o k response
func (o *GetAPITransactionsIDStatusOK) Code() int {
	return 200
}

func (o *GetAPITransactionsIDStatusOK) Error() string {
	return fmt.Sprintf("[GET /api/transactions/{id}/status][%d] getApiTransactionsIdStatusOK  %+v", 200, o.Payload)
}

func (o *GetAPITransactionsIDStatusOK) String() string {
	return fmt.Sprintf("[GET /api/transactions/{id}/status][%d] getApiTransactionsIdStatusOK  %+v", 200, o.Payload)
}

func (o *GetAPITransactionsIDStatusOK) GetPayload() *models.TransactionStatus {
	return o.Payload
}

func (o *GetAPITransactionsIDStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TransactionStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPITransactionsIDStatusBadRequest creates a GetAPITransactionsIDStatusBadRequest with default headers values
func NewGetAPITransactionsIDStatusBadRequest() *GetAPITransactionsIDStatusBadRequest {
	return &GetAPITransactionsIDStatusBadRequest{}
}

/*
GetAPITransactionsIDStatusBadRequest describes a response with status code 400, with default header values.

Ошибка клиента
*/
type GetAPITransactionsIDStatusBadRequest struct {
}

// IsSuccess returns true when this get Api transactions Id status bad request response has a 2xx status code
func (o *GetAPITransactionsIDStatusBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api transactions Id status bad request response has a 3xx status code
func (o *GetAPITransactionsIDStatusBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api transactions Id status bad request response has a 4xx status code
func (o *GetAPITransactionsIDStatusBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Api transactions Id status bad request response has a 5xx status code
func (o *GetAPITransactionsIDStatusBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get Api transactions Id status bad request response a status code equal to that given
func (o *GetAPITransactionsIDStatusBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get Api transactions Id status bad request response
func (o *GetAPITransactionsIDStatusBadRequest) Code() int {
	return 400
}

func (o *GetAPITransactionsIDStatusBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/transactions/{id}/status][%d] getApiTransactionsIdStatusBadRequest ", 400)
}

func (o *GetAPITransactionsIDStatusBadRequest) String() string {
	return fmt.Sprintf("[GET /api/transactions/{id}/status][%d] getApiTransactionsIdStatusBadRequest ", 400)
}

func (o *GetAPITransactionsIDStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAPITransactionsIDStatusInternalServerError creates a GetAPITransactionsIDStatusInternalServerError with default headers values
func NewGetAPITransactionsIDStatusInternalServerError() *GetAPITransactionsIDStatusInternalServerError {
	return &GetAPITransactionsIDStatusInternalServerError{}
}

/*
GetAPITransactionsIDStatusInternalServerError describes a response with status code 500, with default header values.

Internal error
*/
type GetAPITransactionsIDStatusInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get Api transactions Id status internal server error response has a 2xx status code
func (o *GetAPITransactionsIDStatusInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Api transactions Id status internal server error response has a 3xx status code
func (o *GetAPITransactionsIDStatusInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Api transactions Id status internal server error response has a 4xx status code
func (o *GetAPITransactionsIDStatusInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Api transactions Id status internal server error response has a 5xx status code
func (o *GetAPITransactionsIDStatusInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get Api transactions Id status internal server error response a status code equal to that given
func (o *GetAPITransactionsIDStatusInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get Api transactions Id status internal server error response
func (o *GetAPITransactionsIDStatusInternalServerError) Code() int {
	return 500
}

func (o *GetAPITransactionsIDStatusInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/transactions/{id}/status][%d] getApiTransactionsIdStatusInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAPITransactionsIDStatusInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/transactions/{id}/status][%d] getApiTransactionsIdStatusInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAPITransactionsIDStatusInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAPITransactionsIDStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
